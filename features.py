def f275_name(index):
    "Returns the name of the feature."
    mapping = {
        0: "Number of top-level conjuncts",
        1: "Max conjunct depth per conjunct",
        2: "number of negations per conjunct",
        3: "max negation depth per conjunct",
        4: "max negation depth per number of negations",
        5: "Conjunctions per conjunct",
        6: "Disjunctions per conjunct",
        7: "Implications per conjunct",
        8: "Equivalencies per conjunct",
        9: "Logic ops per conjunct",
        10: "Boolean literals per conjunct",
        11: "number of boolean conversions per conjunct",
        12: "Number of quantifiers",
        13: "Universal quantifiers per conjunct",
        14: "Existential quantifiers per conjunct",
        15: "max depth of nested quantifiers per conjunct",
        16: "Quantifiers per conjunct",
        17: "\\forall ratio of all quantifiers",
        18: "\\exists ratio of all quantifiers",
        19: "average nesting depth of quantifiers",
        20: "Equality per conjunct",
        21: "Inequality per conjunct",
        22: "Number of identifiers",
        23: "#identifier relations",
        24: "#ids with bounded domains, symbolic",
        25: "#ids with bounded domains, explicit",
        26: "#ids with semi-bounded domains, symbolic",
        27: "#ids with semi-bounded domains, explicit-",
        28: "#ids with unbounded domains, symbolic",
        29: "#ids with unbounded domains, explicit",
        30: "Identifiers per conjunct",
        31: "#identifier relations per conjunct",
        32: "#ids with bounded domains per conjunct, symbolic",
        33: "#ids with bounded domains per conjunct, explicit",
        34: "#ids with semi-bounded domains per conjunct, symbolic",
        35: "#ids with semi-bounded domains per conjunct, explicit",
        36: "#ids with unbounded domains per conjunct, symbolic",
        37: "#ids with unbounded domains per conjunct, explicit",
        38: "#identifier relations ratio of all identifers",
        39: "#ids with bounded domains ratio of all identifers, symbolic",
        40: "#ids with bounded domains ratio of all identifers, explicit",
        41: "#ids with semi-bounded domains ratio of all identifers, symbolic",
        42: "#ids with semi-bounded domains ratio of all identifers, explicit",
        43: "#ids with unbounded domains ratio of all identifers, symbolic",
        44: "#ids with unbounded domains ratio of all identifers, explicit",
        45: "Number of arithmetic ops",
        46: "Additions",
        47: "Multiplications",
        48: "Divisions",
        49: "Modulo operations",
        50: "Comparison operators",
        51: "General sum",
        52: "General prod",
        53: "`succ` calls",
        54: "`pred` calls",
        55: "Additions per conjunct",
        56: "Multiplications per conjunct",
        57: "Divisions per conjunct",
        58: "Modulo per conjunct",
        59: "Comparissons per conjunct",
        60: "General sum per conjunct",
        61: "General prod per conjunct",
        62: "`succ` per conjunct",
        63: "`pred` per conjunct",
        64: "Arithmetic ops per conjunct",
        65: "Addition ratio of arithmetic ops",
        66: "Multiplication ratio of arithmetic ops",
        67: "Division ratio of arithmetic ops",
        68: "Modulo ratio of arithmetic ops",
        69: "Comparissons ratio of arithmetic ops",
        70: "General sum ratio of arithmetic ops",
        71: "General prod ratio of arithmetic ops",
        72: "`succ` ratio of arithmetic ops",
        73: "`pred` ratio of arithmetic ops",
        74: "Set inclusions",
        75: "Set operations",
        76: "Set memberships",
        77: "Negated set memberships",
        78: "Subsets",
        79: "Strict subsets",
        80: "number of `finite(.)` calls",
        81: "number of `infinite(.)` calls",
        82: "number of `card(.)` calls",
        83: "Set unions",
        84: "Intersections",
        85: "Set subtractions",
        86: "General set unions",
        87: "General intersections",
        88: "Quantified set unions",
        89: "Quantified intersections",
        90: "Number of set comprehensions",
        91: "Set memberships per clause",
        92: "Negative set memberships per clause",
        93: "Subsets per clause",
        94: "Strict subsets per clause",
        95: "number of `finite(.)` calls per clause",
        96: "number of `infinite(.)` calls per clause",
        97: "number of `card(.)` calls per clause",
        98: "Set unions per clause",
        99: "Intersections per clause",
        100: "Set subtractions per clause",
        101: "General set unions per clause",
        102: "General intersections per clause",
        103: "Quantified set unions per clause",
        104: "Quantified intersections per clause",
        105: "Number of set comprehensions per clause",
        106: "Set inclusions per clause",
        107: "Set operations per clause",
        108: "Set memberships per set inclusion op",
        109: "Negative set memberships per set inclusion op",
        110: "Subsets per set inclusion op",
        111: "Strict subsets per set inclusion op",
        112: "Set unions per set inclusion op",
        113: "Intersections per set inclusion op",
        114: "Set subtractions per set inclusion op",
        115: "General set unions per set inclusion op",
        116: "General intersections per set inclusion op",
        117: "Quantified set unions per set inclusion op",
        118: "Quantified intersections per set inclusion op",
        119: "Number of set comprehensions per set inclusion op",
        120: "Number of set comprehensions per set ops",
        121: "number of power sets",
        122: "number of power set nestings $\mathbb{P}(\mathbb{P}(...))$",
        123: "max. power set nesting depth",
        124: "Powersets per clause",
        125: "Nested powersets per clause",
        126: "Nested powersets per powerset use",
        127: "Powersets per set op",
        128: "Nested powersets per set op",
        129: "avg. power set nesting depth",
        130: "avg. nested power set depth",
        131: "Number of relations",
        132: "Number of rel ops",
        133: "Number of general relations",
        134: "Number of total relations",
        135: "Number of surjective relations",
        136: "Number of bijective relations",
        137: "Relational images",
        138: "Relational inversions",
        139: "Relational overrides",
        140: "Direct products",
        141: "Parallel products",
        142: "Relational domain",
        143: "Relational range",
        144: "prj1",
        145: "prj2",
        146: "forward composition",
        147: "Domain restriction",
        148: "Domain subtraction",
        149: "Range restriction",
        150: "Range subtraction",
        151: "Number of general relationsper clause",
        152: "Number of total relationsper clause",
        153: "Number of surjective relationsper clause",
        154: "Number of bijective relationsper clause",
        155: "Relational imagesper clause",
        156: "Relational inversionsper clause",
        157: "Relational overridesper clause",
        158: "Direct productsper clause",
        159: "Parallel productsper clause",
        160: "Relational domainper clause",
        161: "Relational rangeper clause",
        162: "prj1per clause",
        163: "prj2per clause",
        164: "forward compositionper clause",
        165: "Domain restrictionper clause",
        166: "Domain subtractionper clause",
        167: "Range restrictionper clause",
        168: "Range subtractionper clause",
        169: "Relations per clause",
        170: "Rel ops per clause",
        171: "General relations ratio of all relations",
        172: "Total relations ratio of all relations",
        173: "Surjective relations ratio of all relations",
        174: "Bijective relations ratio of all relations",
        175: "Relational images ratio of rel ops",
        176: "Relational inversions ratio of rel ops",
        177: "Relational overrides ratio of rel ops",
        178: "Direct products ratio of rel ops",
        179: "Parallel products ratio of rel ops",
        180: "Relational domain ratio of rel ops",
        181: "Relational range ratio of rel ops",
        182: "prj1 ratio of rel ops",
        183: "prj2 ratio of rel ops",
        184: "forward composition ratio of rel ops",
        185: "Domain restriction ratio of rel ops",
        186: "Domain subtraction ratio of rel ops",
        187: "Range restriction ratio of rel ops",
        188: "Range subtraction ratio of rel ops",
        189: "Number of functions",
        190: "Function applications",
        191: "General, partial function",
        192: "General, total function",
        193: "Injective, partial function",
        194: "Injective, total function",
        195: "Surjective, partial function",
        196: "Surjective, total function",
        197: "Bijective, partial function",
        198: "Bijective, total function",
        199: "Lambda-expression",
        200: "General, partial function per clause",
        201: "General, total function per clause",
        202: "Injective, partial function per clause",
        203: "Injective, total function per clause",
        204: "Surjective, partial function per clause",
        205: "Surjective, total function per clause",
        206: "Bijective, partial function per clause",
        207: "Bijective, total function per clause",
        208: "Lambda-expression per clause",
        209: "Function applications per clause",
        210: "Functions per clause",
        211: "Functions or function applications per clause",
        212: "General, partial function ratio over functions",
        213: "General, total function ratio over functions",
        214: "Injective, partial function ratio over functions",
        215: "Injective, total function ratio over functions",
        216: "Surjective, partial function ratio over functions",
        217: "Surjective, total function ratio over functions",
        218: "Bijective, partial function ratio over functions",
        219: "Bijective, total function ratio over functions",
        220: "Lambda-expression ratio over functions",
        221: "Function applications ratio over functions",
        222: "Number of sequences and injective sequences",
        223: "Number of seq ops",
        224: "Number of sequences",
        225: "Number of injective sequences",
        226: "`size` calls",
        227: "`first` calls",
        228: "`tail` calls",
        229: "`last` calls",
        230: "`front` calls",
        231: "`reverse` calls",
        232: "`permutation` calls",
        233: "`concatenation` calls",
        234: "front insertions",
        235: "tail insertions",
        236: "front restrictions",
        237: "tail restrictions",
        238: "general concatenations",
        239: "Sequences per conjunct",
        240: "Injective sequences per conjunct",
        241: "`size` calls per conjunct",
        242: "`first` calls per conjunct",
        243: "`tail` calls per conjunct",
        244: "`last` calls per conjunct",
        245: "`front` calls per conjunct",
        246: "`reverse` calls per conjunct",
        247: "`permutation` calls per conjunct",
        248: "`concatenation` calls per conjunct",
        249: "front insertions per conjunct",
        250: "tail insertions per conjunct",
        251: "front restrictions per conjunct",
        252: "tail restrictions per conjunct",
        253: "general concatenations per conjunct",
        254: "Total amount of sequences per conjunct$",
        255: "Seq ops per conjunct",
        256: "Normal sequence ratio of all sequences",
        257: "Injective sequence ratio of all sequences",
        258: "`size` calls ratio per seq op",
        259: "`first` calls ratio per seq op",
        260: "`tail` calls ratio per seq op",
        261: "`last` calls ratio per seq op",
        262: "`front` calls ratio per seq op",
        263: "`reverse` calls ratio per seq op",
        264: "`permutation` calls ratio per seq op",
        265: "`concatenation` calls ratio per seq op",
        266: "front insertions ratio per seq op",
        267: "tail insertions ratio per seq op",
        268: "front restrictions ratio per seq op",
        269: "tail restrictions ratio per seq op",
        270: "general concatenations ratio per seq op",
        271: "number of closures",
        272: "number of iterations",
        273: "number of closures per conjunct",
        274: "number of iterations per conjunct"
    }
    return mapping[index]


def f275_category(index):
    "Returns the category of the indexed feature."
    id = (int(index)+1)

    if id < 12: cat = "Logic"
    elif id < 21: cat = "Quantifiers"
    elif id < 23: cat = "Equality"
    elif id < 46: cat = "Identifiers"
    elif id < 75: cat = "Arithmetic"
    elif id < 132: cat = "Set theory"
    elif id < 190: cat = "Relations"
    elif id < 223: cat = "Functions"
    elif id < 272: cat = "Sequences"
    elif id <= 275: cat = "Closure"
    else: cat = "Unknown"

    return cat


def format_importances(importances):
    """
    Formats a list of tuples (importance, feature index) into the 4-tuple
    (gini importance, feature category, feature id, feature name).
    """
    res = []
    for i, f in importances:
        res.append((i, f275_category(f), f, f275_name(f)))
    return res
